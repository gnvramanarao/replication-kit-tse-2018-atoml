<?xml version="1.0" encoding="UTF-8"?><testrun name="org.apache.spark.ml.classification" project="atoml" tests="420" started="420" failures="41" errors="15" ignored="0">
  <testsuite name="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="1249.454">
    <testcase name="test_Bias" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="30.996"/>
    <testcase name="test_Const_IONOSPHERE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="11.679">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 43 violations expected:&lt;0&gt; but was:&lt;43&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest.test_Const_IONOSPHERE(SVM_Linear_Spark_AtomlTest.java:236)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Const_RANDNUM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="9.964">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 12 violations expected:&lt;0&gt; but was:&lt;12&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest.test_Const_RANDNUM(SVM_Linear_Spark_AtomlTest.java:148)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Const_UNBALANCE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="11.834"/>
    <testcase name="test_Const_UNIFORM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="9.254">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 20 violations expected:&lt;0&gt; but was:&lt;20&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest.test_Const_UNIFORM(SVM_Linear_Spark_AtomlTest.java:192)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_DisjointCategorical" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.556"/>
    <testcase name="test_DisjointNumeric" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="18.733"/>
    <testcase name="test_LeftSkew" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="14.226"/>
    <testcase name="test_ManyCategories" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="344.737"/>
    <testcase name="test_MaxDouble" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="0.557"/>
    <testcase name="test_MaxFloat" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="15.553"/>
    <testcase name="test_MinDouble" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="16.85"/>
    <testcase name="test_MinFloat" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="12.828"/>
    <testcase name="test_OneClass" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="1.118"/>
    <testcase name="test_Opposite_CATEGORICAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.109"/>
    <testcase name="test_Opposite_CREDITG" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="6.095"/>
    <testcase name="test_Opposite_IONOSPHERE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.049"/>
    <testcase name="test_Opposite_RANDCAT" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="17.55"/>
    <testcase name="test_Opposite_RANDNUM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="29.915"/>
    <testcase name="test_Opposite_UNBALANCE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="9.151"/>
    <testcase name="test_Opposite_UNIFORM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="30.998"/>
    <testcase name="test_Opposite_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="6.782"/>
    <testcase name="test_Opposite_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="13.478"/>
    <testcase name="test_Outlier" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="23.248"/>
    <testcase name="test_RandomCategorial" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="14.167"/>
    <testcase name="test_RandomNumeric" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="17.905"/>
    <testcase name="test_Rename_CATEGORICAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.48"/>
    <testcase name="test_Rename_CREDITG" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.616"/>
    <testcase name="test_Rename_IONOSPHERE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.014"/>
    <testcase name="test_Rename_RANDCAT" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="17.201"/>
    <testcase name="test_Rename_RANDNUM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="28.648"/>
    <testcase name="test_Rename_UNBALANCE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.326"/>
    <testcase name="test_Rename_UNIFORM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="29.393"/>
    <testcase name="test_Rename_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.315"/>
    <testcase name="test_Rename_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="9.072"/>
    <testcase name="test_Reorder_CATEGORICAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="7.777"/>
    <testcase name="test_Reorder_CREDITG" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.584"/>
    <testcase name="test_Reorder_IONOSPHERE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="4.931"/>
    <testcase name="test_Reorder_RANDCAT" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="16.849"/>
    <testcase name="test_Reorder_RANDNUM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="29.119"/>
    <testcase name="test_Reorder_UNBALANCE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.289"/>
    <testcase name="test_Reorder_UNIFORM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="28.38"/>
    <testcase name="test_Reorder_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.471"/>
    <testcase name="test_Reorder_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.663"/>
    <testcase name="test_RightSkew" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="12.42"/>
    <testcase name="test_Same_CATEGORICAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="7.742"/>
    <testcase name="test_Same_CREDITG" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.504"/>
    <testcase name="test_Same_IONOSPHERE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="4.904"/>
    <testcase name="test_Same_RANDCAT" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="16.999"/>
    <testcase name="test_Same_RANDNUM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="29.443"/>
    <testcase name="test_Same_UNBALANCE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.225"/>
    <testcase name="test_Same_UNIFORM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="29.082"/>
    <testcase name="test_Same_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.278"/>
    <testcase name="test_Same_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.833"/>
    <testcase name="test_Scramble_CATEGORICAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.574"/>
    <testcase name="test_Scramble_CREDITG" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.584">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 16 violations expected:&lt;0&gt; but was:&lt;16&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest.test_Scramble_CREDITG(SVM_Linear_Spark_AtomlTest.java:896)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_IONOSPHERE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="4.926"/>
    <testcase name="test_Scramble_RANDCAT" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="9.402">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 3): 1 violations expected:&lt;0&gt; but was:&lt;1&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest.test_Scramble_RANDCAT(SVM_Linear_Spark_AtomlTest.java:808)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_RANDNUM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="28.302"/>
    <testcase name="test_Scramble_UNBALANCE" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.028"/>
    <testcase name="test_Scramble_UNIFORM" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="28.507"/>
    <testcase name="test_Scramble_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="5.21"/>
    <testcase name="test_Scramble_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="8.799"/>
    <testcase name="test_Split" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="18.296"/>
    <testcase name="test_StarvedBinary" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="12.62"/>
    <testcase name="test_StarvedMany" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="1.252"/>
    <testcase name="test_Uniform" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="13.994"/>
    <testcase name="test_VeryLarge" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="12.424"/>
    <testcase name="test_VerySmall" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="15.916"/>
    <testcase name="test_Zeroes" classname="org.apache.spark.ml.classification.SVM_Linear_Spark_AtomlTest" time="20.728"/>
  </testsuite>
  <testsuite name="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1411.659">
    <testcase name="test_Bias" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.629"/>
    <testcase name="test_Const_IONOSPHERE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="2.389"/>
    <testcase name="test_Const_RANDNUM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="4.12"/>
    <testcase name="test_Const_UNBALANCE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.261"/>
    <testcase name="test_Const_UNIFORM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.776"/>
    <testcase name="test_DisjointCategorical" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="2.402"/>
    <testcase name="test_DisjointNumeric" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.846"/>
    <testcase name="test_LeftSkew" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.634"/>
    <testcase name="test_ManyCategories" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1301.641"/>
    <testcase name="test_MaxDouble" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.845"/>
    <testcase name="test_MaxFloat" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.655"/>
    <testcase name="test_MinDouble" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.124"/>
    <testcase name="test_MinFloat" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.616"/>
    <testcase name="test_OneClass" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.932"/>
    <testcase name="test_Opposite_CATEGORICAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.926">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 5 violations expected:&lt;0&gt; but was:&lt;5&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Opposite_CATEGORICAL(RandomForest_Default_Spark_AtomlTest.java:456)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Opposite_CREDITG" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.389">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 36 violations expected:&lt;0&gt; but was:&lt;36&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Opposite_CREDITG(RandomForest_Default_Spark_AtomlTest.java:500)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Opposite_IONOSPHERE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.954"/>
    <testcase name="test_Opposite_RANDCAT" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="2.922">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 4): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Opposite_RANDCAT(RandomForest_Default_Spark_AtomlTest.java:412)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Opposite_RANDNUM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.273">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 5): 4 violations expected:&lt;0&gt; but was:&lt;4&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Opposite_RANDNUM(RandomForest_Default_Spark_AtomlTest.java:324)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Opposite_UNBALANCE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.16"/>
    <testcase name="test_Opposite_UNIFORM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.123"/>
    <testcase name="test_Opposite_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.628"/>
    <testcase name="test_Opposite_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.649"/>
    <testcase name="test_Outlier" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.034"/>
    <testcase name="test_RandomCategorial" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="2.091"/>
    <testcase name="test_RandomNumeric" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.676"/>
    <testcase name="test_Rename_CATEGORICAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.565"/>
    <testcase name="test_Rename_CREDITG" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.265"/>
    <testcase name="test_Rename_IONOSPHERE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.887"/>
    <testcase name="test_Rename_RANDCAT" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.476"/>
    <testcase name="test_Rename_RANDNUM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.097"/>
    <testcase name="test_Rename_UNBALANCE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.031"/>
    <testcase name="test_Rename_UNIFORM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.036"/>
    <testcase name="test_Rename_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.625"/>
    <testcase name="test_Rename_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.606"/>
    <testcase name="test_Reorder_CATEGORICAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.776">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 7 violations expected:&lt;0&gt; but was:&lt;7&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Reorder_CATEGORICAL(RandomForest_Default_Spark_AtomlTest.java:1248)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_CREDITG" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.249">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 49 violations expected:&lt;0&gt; but was:&lt;49&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Reorder_CREDITG(RandomForest_Default_Spark_AtomlTest.java:1292)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_IONOSPHERE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.847">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 3 violations expected:&lt;0&gt; but was:&lt;3&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Reorder_IONOSPHERE(RandomForest_Default_Spark_AtomlTest.java:1336)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_RANDCAT" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.757">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 7 violations expected:&lt;0&gt; but was:&lt;7&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Reorder_RANDCAT(RandomForest_Default_Spark_AtomlTest.java:1204)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_RANDNUM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.718">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 3 violations expected:&lt;0&gt; but was:&lt;3&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Reorder_RANDNUM(RandomForest_Default_Spark_AtomlTest.java:1116)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_UNBALANCE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.975">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Reorder_UNBALANCE(RandomForest_Default_Spark_AtomlTest.java:1380)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_UNIFORM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.301">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 2): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Reorder_UNIFORM(RandomForest_Default_Spark_AtomlTest.java:1160)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.613"/>
    <testcase name="test_Reorder_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.591"/>
    <testcase name="test_RightSkew" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.556"/>
    <testcase name="test_Same_CATEGORICAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.358"/>
    <testcase name="test_Same_CREDITG" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.248"/>
    <testcase name="test_Same_IONOSPHERE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.881"/>
    <testcase name="test_Same_RANDCAT" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.435"/>
    <testcase name="test_Same_RANDNUM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="3.129"/>
    <testcase name="test_Same_UNBALANCE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.107"/>
    <testcase name="test_Same_UNIFORM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="2.982"/>
    <testcase name="test_Same_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.597"/>
    <testcase name="test_Same_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.617"/>
    <testcase name="test_Scramble_CATEGORICAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.841">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 12 violations expected:&lt;0&gt; but was:&lt;12&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Scramble_CATEGORICAL(RandomForest_Default_Spark_AtomlTest.java:852)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_CREDITG" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.238">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 57 violations expected:&lt;0&gt; but was:&lt;57&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Scramble_CREDITG(RandomForest_Default_Spark_AtomlTest.java:896)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_IONOSPHERE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.892">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 1 violations expected:&lt;0&gt; but was:&lt;1&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Scramble_IONOSPHERE(RandomForest_Default_Spark_AtomlTest.java:940)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_RANDCAT" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.76">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 9 violations expected:&lt;0&gt; but was:&lt;9&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Scramble_RANDCAT(RandomForest_Default_Spark_AtomlTest.java:808)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_RANDNUM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.691">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 4 violations expected:&lt;0&gt; but was:&lt;4&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Scramble_RANDNUM(RandomForest_Default_Spark_AtomlTest.java:720)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_UNBALANCE" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.018">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 5 violations expected:&lt;0&gt; but was:&lt;5&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Scramble_UNBALANCE(RandomForest_Default_Spark_AtomlTest.java:984)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_UNIFORM" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.677">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 4 violations expected:&lt;0&gt; but was:&lt;4&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest.test_Scramble_UNIFORM(RandomForest_Default_Spark_AtomlTest.java:764)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.606"/>
    <testcase name="test_Scramble_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.626"/>
    <testcase name="test_Split" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.979"/>
    <testcase name="test_StarvedBinary" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="2.025"/>
    <testcase name="test_StarvedMany" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="2.512"/>
    <testcase name="test_Uniform" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.517"/>
    <testcase name="test_VeryLarge" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="1.589"/>
    <testcase name="test_VerySmall" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.841"/>
    <testcase name="test_Zeroes" classname="org.apache.spark.ml.classification.RandomForest_Default_Spark_AtomlTest" time="0.825"/>
  </testsuite>
  <testsuite name="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="82.275">
    <testcase name="test_Bias" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.613"/>
    <testcase name="test_Const_IONOSPHERE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.276">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Const_IONOSPHERE(NaiveBayes_Default_Spark_AtomlTest.java:220)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Const_RANDNUM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.318">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 20 violations expected:&lt;0&gt; but was:&lt;20&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Const_RANDNUM(NaiveBayes_Default_Spark_AtomlTest.java:148)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Const_UNBALANCE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.278">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Const_UNBALANCE(NaiveBayes_Default_Spark_AtomlTest.java:264)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Const_UNIFORM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.332">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 27 violations expected:&lt;0&gt; but was:&lt;27&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Const_UNIFORM(NaiveBayes_Default_Spark_AtomlTest.java:192)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_DisjointCategorical" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.406"/>
    <testcase name="test_DisjointNumeric" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.534"/>
    <testcase name="test_LeftSkew" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.16">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [0.0,-3.96107,-3.4E-5,-0.006668,0.0,-4.0E-6,-5.910338,0.0,-6.03E-4,-1.3E-5].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_LeftSkew(NaiveBayes_Default_Spark_AtomlTest.java:2440)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [0.0,-3.96107,-3.4E-5,-0.006668,0.0,-4.0E-6,-5.910338,0.0,-6.03E-4,-1.3E-5].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_ManyCategories" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="35.146"/>
    <testcase name="test_MaxDouble" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.468"/>
    <testcase name="test_MaxFloat" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.457"/>
    <testcase name="test_MinDouble" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.426"/>
    <testcase name="test_MinFloat" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.483"/>
    <testcase name="test_OneClass" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.439"/>
    <testcase name="test_Opposite_CATEGORICAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.802"/>
    <testcase name="test_Opposite_CREDITG" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.907"/>
    <testcase name="test_Opposite_IONOSPHERE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.17">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Opposite_IONOSPHERE(NaiveBayes_Default_Spark_AtomlTest.java:528)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Opposite_RANDCAT" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.701"/>
    <testcase name="test_Opposite_RANDNUM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.905"/>
    <testcase name="test_Opposite_UNBALANCE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.248">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Opposite_UNBALANCE(NaiveBayes_Default_Spark_AtomlTest.java:572)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Opposite_UNIFORM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.877"/>
    <testcase name="test_Opposite_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.39"/>
    <testcase name="test_Opposite_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.326"/>
    <testcase name="test_Outlier" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.445"/>
    <testcase name="test_RandomCategorial" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.078"/>
    <testcase name="test_RandomNumeric" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.447"/>
    <testcase name="test_Rename_CATEGORICAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.721"/>
    <testcase name="test_Rename_CREDITG" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.662"/>
    <testcase name="test_Rename_IONOSPHERE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.18">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Rename_IONOSPHERE(NaiveBayes_Default_Spark_AtomlTest.java:2112)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Rename_RANDCAT" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.675"/>
    <testcase name="test_Rename_RANDNUM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.876"/>
    <testcase name="test_Rename_UNBALANCE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.196">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Rename_UNBALANCE(NaiveBayes_Default_Spark_AtomlTest.java:2156)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Rename_UNIFORM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.848"/>
    <testcase name="test_Rename_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.293"/>
    <testcase name="test_Rename_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.312"/>
    <testcase name="test_Reorder_CATEGORICAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.777"/>
    <testcase name="test_Reorder_CREDITG" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.732"/>
    <testcase name="test_Reorder_IONOSPHERE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.19">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Reorder_IONOSPHERE(NaiveBayes_Default_Spark_AtomlTest.java:1320)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Reorder_RANDCAT" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.837"/>
    <testcase name="test_Reorder_RANDNUM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.859"/>
    <testcase name="test_Reorder_UNBALANCE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.184">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Reorder_UNBALANCE(NaiveBayes_Default_Spark_AtomlTest.java:1364)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Reorder_UNIFORM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.864"/>
    <testcase name="test_Reorder_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.284"/>
    <testcase name="test_Reorder_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.281"/>
    <testcase name="test_RightSkew" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.425"/>
    <testcase name="test_Same_CATEGORICAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.689"/>
    <testcase name="test_Same_CREDITG" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.733"/>
    <testcase name="test_Same_IONOSPHERE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.148">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Same_IONOSPHERE(NaiveBayes_Default_Spark_AtomlTest.java:1716)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Same_RANDCAT" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.674"/>
    <testcase name="test_Same_RANDNUM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.832"/>
    <testcase name="test_Same_UNBALANCE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.202">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Same_UNBALANCE(NaiveBayes_Default_Spark_AtomlTest.java:1760)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Same_UNIFORM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.937"/>
    <testcase name="test_Same_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.308"/>
    <testcase name="test_Same_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.285"/>
    <testcase name="test_Scramble_CATEGORICAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.681"/>
    <testcase name="test_Scramble_CREDITG" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.658"/>
    <testcase name="test_Scramble_IONOSPHERE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.15">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Scramble_IONOSPHERE(NaiveBayes_Default_Spark_AtomlTest.java:924)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [1.0,0.0,0.99539,-0.05889,0.85243,0.02306,0.83398,-0.37708,1.0,0.0376,0.85243,-0.17755,0.59755,-0.44945,0.60536,-0.38223,0.84356,-0.38542,0.58212,-0.32192,0.56971,-0.29674,0.36946,-0.47357,0.56811,-0.51171,0.41078,-0.46168,0.21266,-0.3409,0.42267,-0.54487,0.18641,-0.453].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Scramble_RANDCAT" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.677"/>
    <testcase name="test_Scramble_RANDNUM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.853"/>
    <testcase name="test_Scramble_UNBALANCE" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.189">
      <error>org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0, localhost, executor driver): java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;

Driver stacktrace:&#13;
	at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1602)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1590)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1589)&#13;
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)&#13;
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1589)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:831)&#13;
	at scala.Option.foreach(Option.scala:257)&#13;
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:831)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1823)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1772)&#13;
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1761)&#13;
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)&#13;
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:642)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2034)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2055)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2074)&#13;
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2099)&#13;
	at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:939)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)&#13;
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)&#13;
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)&#13;
	at org.apache.spark.rdd.RDD.collect(RDD.scala:938)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.trainWithLabelCheck(NaiveBayes.scala:173)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:117)&#13;
	at org.apache.spark.ml.classification.NaiveBayes.train(NaiveBayes.scala:77)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest.test_Scramble_UNBALANCE(NaiveBayes_Default_Spark_AtomlTest.java:968)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
Caused by: java.lang.IllegalArgumentException: requirement failed: Naive Bayes requires nonnegative feature values but found [-2.3941,1.8819,-2.5208,2.3536,-2.7698,3.1048,-3.4568,3.9734,-0.8412,1.2385,-1.7103,2.0127,-2.5874,2.8944,-3.4677,3.7962,-0.885,1.1079,-1.694,1.9939,-2.5592,2.8987,-3.4355,3.8086,4.924,60.45,6.0,4.0,1.0,362.857,1.0,0.0].&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$.requireNonnegativeValues(NaiveBayes.scala:232)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$4.apply(NaiveBayes.scala:140)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:165)&#13;
	at org.apache.spark.ml.classification.NaiveBayes$$anonfun$7.apply(NaiveBayes.scala:163)&#13;
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$aggregateByKey$1$$anonfun$apply$6.apply(PairRDDFunctions.scala:172)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:189)&#13;
	at org.apache.spark.util.collection.ExternalSorter$$anonfun$5.apply(ExternalSorter.scala:188)&#13;
	at org.apache.spark.util.collection.AppendOnlyMap.changeValue(AppendOnlyMap.scala:144)&#13;
	at org.apache.spark.util.collection.SizeTrackingAppendOnlyMap.changeValue(SizeTrackingAppendOnlyMap.scala:32)&#13;
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:194)&#13;
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)&#13;
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)&#13;
	at org.apache.spark.scheduler.Task.run(Task.scala:109)&#13;
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)&#13;
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)&#13;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_Scramble_UNIFORM" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.851"/>
    <testcase name="test_Scramble_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.281"/>
    <testcase name="test_Scramble_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.268"/>
    <testcase name="test_Split" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.458"/>
    <testcase name="test_StarvedBinary" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.015"/>
    <testcase name="test_StarvedMany" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="1.129"/>
    <testcase name="test_Uniform" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.446"/>
    <testcase name="test_VeryLarge" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.126"/>
    <testcase name="test_VerySmall" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.43"/>
    <testcase name="test_Zeroes" classname="org.apache.spark.ml.classification.NaiveBayes_Default_Spark_AtomlTest" time="0.424"/>
  </testsuite>
  <testsuite name="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="36209.803">
    <testcase name="test_Bias" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="17.225"/>
    <testcase name="test_Const_IONOSPHERE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="10.328"/>
    <testcase name="test_Const_RANDNUM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="40.209"/>
    <testcase name="test_Const_UNBALANCE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="10.986"/>
    <testcase name="test_Const_UNIFORM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="40.015"/>
    <testcase name="test_DisjointCategorical" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="17.663"/>
    <testcase name="test_DisjointNumeric" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="20.179"/>
    <testcase name="test_LeftSkew" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="19.254"/>
    <testcase name="test_ManyCategories" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="34544.974"/>
    <testcase name="test_MaxDouble" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="23.082"/>
    <testcase name="test_MaxFloat" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="22.123"/>
    <testcase name="test_MinDouble" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="9.166"/>
    <testcase name="test_MinFloat" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="21.851"/>
    <testcase name="test_OneClass" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="16.766"/>
    <testcase name="test_Opposite_CATEGORICAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="39.555"/>
    <testcase name="test_Opposite_CREDITG" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="11.551"/>
    <testcase name="test_Opposite_IONOSPHERE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="11.622"/>
    <testcase name="test_Opposite_RANDCAT" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="39.709"/>
    <testcase name="test_Opposite_RANDNUM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="43.952"/>
    <testcase name="test_Opposite_UNBALANCE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="12.666"/>
    <testcase name="test_Opposite_UNIFORM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="46.488"/>
    <testcase name="test_Opposite_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="6.682"/>
    <testcase name="test_Opposite_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="6.705"/>
    <testcase name="test_Outlier" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="11.692"/>
    <testcase name="test_RandomCategorial" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="19.633"/>
    <testcase name="test_RandomNumeric" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="21.615"/>
    <testcase name="test_Rename_CATEGORICAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="39.651"/>
    <testcase name="test_Rename_CREDITG" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="11.737"/>
    <testcase name="test_Rename_IONOSPHERE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="11.15"/>
    <testcase name="test_Rename_RANDCAT" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="38.529"/>
    <testcase name="test_Rename_RANDNUM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="43.634"/>
    <testcase name="test_Rename_UNBALANCE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="12.458"/>
    <testcase name="test_Rename_UNIFORM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="43.191"/>
    <testcase name="test_Rename_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="6.004"/>
    <testcase name="test_Rename_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="6.053"/>
    <testcase name="test_Reorder_CATEGORICAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="15.22">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 2): 1 violations expected:&lt;0&gt; but was:&lt;1&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest.test_Reorder_CATEGORICAL(GBT_Default_Spark_AtomlTest.java:1248)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_CREDITG" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="11.547">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 40 violations expected:&lt;0&gt; but was:&lt;40&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest.test_Reorder_CREDITG(GBT_Default_Spark_AtomlTest.java:1292)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_IONOSPHERE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="11.06"/>
    <testcase name="test_Reorder_RANDCAT" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="44.676"/>
    <testcase name="test_Reorder_RANDNUM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="50.994"/>
    <testcase name="test_Reorder_UNBALANCE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="17.521"/>
    <testcase name="test_Reorder_UNIFORM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="57.442"/>
    <testcase name="test_Reorder_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="8.747"/>
    <testcase name="test_Reorder_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="7.305"/>
    <testcase name="test_RightSkew" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="26.508"/>
    <testcase name="test_Same_CATEGORICAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="47.434"/>
    <testcase name="test_Same_CREDITG" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="13.386"/>
    <testcase name="test_Same_IONOSPHERE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="13.103"/>
    <testcase name="test_Same_RANDCAT" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="52.144"/>
    <testcase name="test_Same_RANDNUM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="55.617"/>
    <testcase name="test_Same_UNBALANCE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="14.653"/>
    <testcase name="test_Same_UNIFORM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="51.548"/>
    <testcase name="test_Same_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="7.398"/>
    <testcase name="test_Same_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="7.273"/>
    <testcase name="test_Scramble_CATEGORICAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="53.076"/>
    <testcase name="test_Scramble_CREDITG" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="15.177"/>
    <testcase name="test_Scramble_IONOSPHERE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="16.348"/>
    <testcase name="test_Scramble_RANDCAT" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="46.991"/>
    <testcase name="test_Scramble_RANDNUM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="49.829"/>
    <testcase name="test_Scramble_UNBALANCE" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="14.631"/>
    <testcase name="test_Scramble_UNIFORM" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="49.689"/>
    <testcase name="test_Scramble_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="6.956"/>
    <testcase name="test_Scramble_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="7.0"/>
    <testcase name="test_Split" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="14.786"/>
    <testcase name="test_StarvedBinary" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="24.064"/>
    <testcase name="test_StarvedMany" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="30.411"/>
    <testcase name="test_Uniform" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="24.406"/>
    <testcase name="test_VeryLarge" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="24.249"/>
    <testcase name="test_VerySmall" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="10.339"/>
    <testcase name="test_Zeroes" classname="org.apache.spark.ml.classification.GBT_Default_Spark_AtomlTest" time="10.154"/>
  </testsuite>
  <testsuite name="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="319.609">
    <testcase name="test_Bias" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.628"/>
    <testcase name="test_Const_IONOSPHERE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.08">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 1 violations expected:&lt;0&gt; but was:&lt;1&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest.test_Const_IONOSPHERE(Logistic_Default_Spark_AtomlTest.java:236)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Const_RANDNUM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="4.618"/>
    <testcase name="test_Const_UNBALANCE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.652">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 1 violations expected:&lt;0&gt; but was:&lt;1&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest.test_Const_UNBALANCE(Logistic_Default_Spark_AtomlTest.java:280)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Const_UNIFORM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="6.218"/>
    <testcase name="test_DisjointCategorical" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.927"/>
    <testcase name="test_DisjointNumeric" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.223"/>
    <testcase name="test_LeftSkew" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.733"/>
    <testcase name="test_ManyCategories" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="118.056"/>
    <testcase name="test_MaxDouble" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="0.187">
      <error>java.lang.IllegalArgumentException: requirement failed: init value should &lt;= bound&#13;
	at scala.Predef$.require(Predef.scala:224)&#13;
	at breeze.optimize.StrongWolfeLineSearch.minimizeWithBound(StrongWolfe.scala:73)&#13;
	at breeze.optimize.StrongWolfeLineSearch.minimize(StrongWolfe.scala:62)&#13;
	at breeze.optimize.LBFGS.determineStepSize(LBFGS.scala:76)&#13;
	at breeze.optimize.LBFGS.determineStepSize(LBFGS.scala:39)&#13;
	at breeze.optimize.FirstOrderMinimizer$$anonfun$infiniteIterations$1.apply(FirstOrderMinimizer.scala:64)&#13;
	at breeze.optimize.FirstOrderMinimizer$$anonfun$infiniteIterations$1.apply(FirstOrderMinimizer.scala:62)&#13;
	at scala.collection.Iterator$$anon$7.next(Iterator.scala:129)&#13;
	at breeze.util.IteratorImplicits$RichIterator$$anon$2.next(Implicits.scala:71)&#13;
	at org.apache.spark.ml.classification.LogisticRegression.train(LogisticRegression.scala:809)&#13;
	at org.apache.spark.ml.classification.LogisticRegression.train(LogisticRegression.scala:488)&#13;
	at org.apache.spark.ml.classification.LogisticRegression.train(LogisticRegression.scala:278)&#13;
	at org.apache.spark.ml.Predictor.fit(Predictor.scala:118)&#13;
	at org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest.test_MaxDouble(Logistic_Default_Spark_AtomlTest.java:2400)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</error>
    </testcase>
    <testcase name="test_MaxFloat" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.907"/>
    <testcase name="test_MinDouble" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="0.635"/>
    <testcase name="test_MinFloat" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.647"/>
    <testcase name="test_OneClass" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="0.59"/>
    <testcase name="test_Opposite_CATEGORICAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.195"/>
    <testcase name="test_Opposite_CREDITG" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.514"/>
    <testcase name="test_Opposite_IONOSPHERE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.944"/>
    <testcase name="test_Opposite_RANDCAT" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.703"/>
    <testcase name="test_Opposite_RANDNUM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.67"/>
    <testcase name="test_Opposite_UNBALANCE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.512">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest.test_Opposite_UNBALANCE(Logistic_Default_Spark_AtomlTest.java:588)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Opposite_UNIFORM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="4.187"/>
    <testcase name="test_Opposite_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.047"/>
    <testcase name="test_Opposite_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.799"/>
    <testcase name="test_Outlier" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="0.847"/>
    <testcase name="test_RandomCategorial" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.088"/>
    <testcase name="test_RandomNumeric" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.859"/>
    <testcase name="test_Rename_CATEGORICAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.16"/>
    <testcase name="test_Rename_CREDITG" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.49"/>
    <testcase name="test_Rename_IONOSPHERE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.855"/>
    <testcase name="test_Rename_RANDCAT" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.278"/>
    <testcase name="test_Rename_RANDNUM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.59"/>
    <testcase name="test_Rename_UNBALANCE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.535"/>
    <testcase name="test_Rename_UNIFORM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="4.292"/>
    <testcase name="test_Rename_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.064"/>
    <testcase name="test_Rename_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.731"/>
    <testcase name="test_Reorder_CATEGORICAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.221"/>
    <testcase name="test_Reorder_CREDITG" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.455"/>
    <testcase name="test_Reorder_IONOSPHERE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.845"/>
    <testcase name="test_Reorder_RANDCAT" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.229"/>
    <testcase name="test_Reorder_RANDNUM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.567"/>
    <testcase name="test_Reorder_UNBALANCE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.532">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest.test_Reorder_UNBALANCE(Logistic_Default_Spark_AtomlTest.java:1380)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_UNIFORM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="4.252"/>
    <testcase name="test_Reorder_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.05"/>
    <testcase name="test_Reorder_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.742"/>
    <testcase name="test_RightSkew" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.73"/>
    <testcase name="test_Same_CATEGORICAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.242"/>
    <testcase name="test_Same_CREDITG" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.49"/>
    <testcase name="test_Same_IONOSPHERE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.828"/>
    <testcase name="test_Same_RANDCAT" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.256"/>
    <testcase name="test_Same_RANDNUM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.655"/>
    <testcase name="test_Same_UNBALANCE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.632"/>
    <testcase name="test_Same_UNIFORM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="4.245"/>
    <testcase name="test_Same_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.047"/>
    <testcase name="test_Same_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.751"/>
    <testcase name="test_Scramble_CATEGORICAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.235"/>
    <testcase name="test_Scramble_CREDITG" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.524"/>
    <testcase name="test_Scramble_IONOSPHERE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.87"/>
    <testcase name="test_Scramble_RANDCAT" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="5.305"/>
    <testcase name="test_Scramble_RANDNUM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.616"/>
    <testcase name="test_Scramble_UNBALANCE" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="3.417">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest.test_Scramble_UNBALANCE(Logistic_Default_Spark_AtomlTest.java:984)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Scramble_UNIFORM" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="4.104"/>
    <testcase name="test_Scramble_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.005"/>
    <testcase name="test_Scramble_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.721"/>
    <testcase name="test_Split" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.802"/>
    <testcase name="test_StarvedBinary" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.953"/>
    <testcase name="test_StarvedMany" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="4.156"/>
    <testcase name="test_Uniform" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="2.273"/>
    <testcase name="test_VeryLarge" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="1.152"/>
    <testcase name="test_VerySmall" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="0.61"/>
    <testcase name="test_Zeroes" classname="org.apache.spark.ml.classification.Logistic_Default_Spark_AtomlTest" time="0.617"/>
  </testsuite>
  <testsuite name="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1991.441">
    <testcase name="test_Bias" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.173"/>
    <testcase name="test_Const_IONOSPHERE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.898"/>
    <testcase name="test_Const_RANDNUM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="2.958"/>
    <testcase name="test_Const_UNBALANCE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.055"/>
    <testcase name="test_Const_UNIFORM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="3.164"/>
    <testcase name="test_DisjointCategorical" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="2.123"/>
    <testcase name="test_DisjointNumeric" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.501"/>
    <testcase name="test_LeftSkew" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.527"/>
    <testcase name="test_ManyCategories" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1866.942"/>
    <testcase name="test_MaxDouble" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="2.153"/>
    <testcase name="test_MaxFloat" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.805"/>
    <testcase name="test_MinDouble" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.049"/>
    <testcase name="test_MinFloat" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.652"/>
    <testcase name="test_OneClass" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.208"/>
    <testcase name="test_Opposite_CATEGORICAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="4.035"/>
    <testcase name="test_Opposite_CREDITG" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.446"/>
    <testcase name="test_Opposite_IONOSPHERE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.978"/>
    <testcase name="test_Opposite_RANDCAT" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="4.044"/>
    <testcase name="test_Opposite_RANDNUM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.439">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 2): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Opposite_RANDNUM(DecisionTree_Default_Spark_AtomlTest.java:324)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Opposite_UNBALANCE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.182"/>
    <testcase name="test_Opposite_UNIFORM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.789">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 4 violations expected:&lt;0&gt; but was:&lt;4&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Opposite_UNIFORM(DecisionTree_Default_Spark_AtomlTest.java:368)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Opposite_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.71"/>
    <testcase name="test_Opposite_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.697"/>
    <testcase name="test_Outlier" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.199"/>
    <testcase name="test_RandomCategorial" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="2.303"/>
    <testcase name="test_RandomNumeric" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.715"/>
    <testcase name="test_Rename_CATEGORICAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="4.049"/>
    <testcase name="test_Rename_CREDITG" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.41"/>
    <testcase name="test_Rename_IONOSPHERE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.011"/>
    <testcase name="test_Rename_RANDCAT" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="3.976"/>
    <testcase name="test_Rename_RANDNUM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="3.28"/>
    <testcase name="test_Rename_UNBALANCE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.194"/>
    <testcase name="test_Rename_UNIFORM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="3.386"/>
    <testcase name="test_Rename_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.714"/>
    <testcase name="test_Rename_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.713"/>
    <testcase name="test_Reorder_CATEGORICAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.007">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 3 violations expected:&lt;0&gt; but was:&lt;3&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Reorder_CATEGORICAL(DecisionTree_Default_Spark_AtomlTest.java:1248)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_CREDITG" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.389">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 6 violations expected:&lt;0&gt; but was:&lt;6&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Reorder_CREDITG(DecisionTree_Default_Spark_AtomlTest.java:1292)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_IONOSPHERE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.002">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 8 violations expected:&lt;0&gt; but was:&lt;8&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Reorder_IONOSPHERE(DecisionTree_Default_Spark_AtomlTest.java:1336)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_RANDCAT" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.921">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 26 violations expected:&lt;0&gt; but was:&lt;26&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Reorder_RANDCAT(DecisionTree_Default_Spark_AtomlTest.java:1204)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_RANDNUM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.752">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 6 violations expected:&lt;0&gt; but was:&lt;6&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Reorder_RANDNUM(DecisionTree_Default_Spark_AtomlTest.java:1116)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_UNBALANCE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.201">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Reorder_UNBALANCE(DecisionTree_Default_Spark_AtomlTest.java:1380)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_UNIFORM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.765">
      <failure>java.lang.AssertionError: metamorphic relation broken (iteration 1): 2 violations expected:&lt;0&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:645)&#13;
	at org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest.test_Reorder_UNIFORM(DecisionTree_Default_Spark_AtomlTest.java:1160)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="test_Reorder_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.693"/>
    <testcase name="test_Reorder_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.665"/>
    <testcase name="test_RightSkew" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.71"/>
    <testcase name="test_Same_CATEGORICAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="4.124"/>
    <testcase name="test_Same_CREDITG" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.341"/>
    <testcase name="test_Same_IONOSPHERE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.023"/>
    <testcase name="test_Same_RANDCAT" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="4.047"/>
    <testcase name="test_Same_RANDNUM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="3.466"/>
    <testcase name="test_Same_UNBALANCE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.159"/>
    <testcase name="test_Same_UNIFORM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="3.37"/>
    <testcase name="test_Same_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.713"/>
    <testcase name="test_Same_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.659"/>
    <testcase name="test_Scramble_CATEGORICAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="4.033"/>
    <testcase name="test_Scramble_CREDITG" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.364"/>
    <testcase name="test_Scramble_IONOSPHERE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.968"/>
    <testcase name="test_Scramble_RANDCAT" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="4.168"/>
    <testcase name="test_Scramble_RANDNUM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="3.255"/>
    <testcase name="test_Scramble_UNBALANCE" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.193"/>
    <testcase name="test_Scramble_UNIFORM" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="3.446"/>
    <testcase name="test_Scramble_WEATHERNOMINAL" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.765"/>
    <testcase name="test_Scramble_WEATHERNUMERIC" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="0.672"/>
    <testcase name="test_Split" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.242"/>
    <testcase name="test_StarvedBinary" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="2.272"/>
    <testcase name="test_StarvedMany" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="2.972"/>
    <testcase name="test_Uniform" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.738"/>
    <testcase name="test_VeryLarge" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.749"/>
    <testcase name="test_VerySmall" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.038"/>
    <testcase name="test_Zeroes" classname="org.apache.spark.ml.classification.DecisionTree_Default_Spark_AtomlTest" time="1.057"/>
  </testsuite>
</testrun>
